<!----added for defaults variant loop-->
{% if product.options.size > 1 %}
<div class="select">
  <select id="product-select-{{ product.id }}" name='id'>
    {% for variant in product.variants %}
    {% if variant.title contains 'Reward' %}{% else %}
    <option {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} value="{{ variant.id }}">{{ variant.title }}</option>
    {% endif %}
    {% endfor %}
  </select>
</div>
{% elsif product.options.size == 1  %}
<div class="select">
  <label>{{ product.options[0] }}:</label>
  <select id="product-select-{{ product.id }}" name='id'>
    {% for variant in product.variants %}
    <option {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} value="{{ variant.id }}">{{ variant.title }}</option>
    {% endfor %}
  </select>
</div>
{% else %}
<input type="hidden" name="id" value="{{ product.variants.first.id }}" />
{% endif %}
<!----added for default variants loop-->

{{ 'option_selection.js' | shopify_asset_url | script_tag }}

<script>
  selectCallback = function(variant, selector) {
    // BEGIN SWATCHES
    if (variant) {
      var form = jQuery('#' + selector.domIdPrefix).closest('form');
      for (var i=0,length=variant.options.length; i<length; i++) {
        var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
        if (radioButton.size()) {
          radioButton.get(0).checked = true;
        }
      }
    }
    /* Wishlist King mod start */
    if (window.Appmate && variant) {
      $container = $(".wk-button-container");
      var productId = $container.attr("data-wk-product");
      $(".wk-button-container")
        .children()
        .remove();
      $(".wk-button-container").html(
        "<!-- include 'wishlist-button-product' id: '" +
          productId +
          "' variant: '" +
          variant.id +
          "' -->"
      );
    }
    /* Wishlist King mod end */   
    // END SWATCHES
    if (variant && variant.featured_image) {
      var sizedImgUrl = slate.Image.getSizedImageUrl(variant.featured_image.src, '2048x2048');
      $('.featured-image img').css('opacity','0')
      $('.featured-image img').attr('src', sizedImgUrl);
      $('.featured-image').attr('href', sizedImgUrl);
      MagicZoom.refresh();
      setTimeout(function(){ 
        $('.featured-image img').attr('src', sizedImgUrl);
        $('.featured-image').attr('href', sizedImgUrl);
        $('.featured-image img').css('opacity','1')
      }, 200);
  
    }

    //For option image group #1
    var var_color_name= variant.option1;
    var_color_name = var_color_name.replace(/ /g,'-').replace(/\//g,'-').toLowerCase();
    var select_variant ='.thumbs .'+var_color_name;
    if($(select_variant).length){
      $('.all_thumb').hide();
      $(select_variant).show();
    }
  //For option image group #2
    var var_color_name2= variant.option2;
    var_color_name2 = var_color_name2.replace(/ /g,'-').replace(/\//g,'-').toLowerCase();
    var select_variant ='.thumbs .'+var_color_name2;
    if($(select_variant).length){
      $('.all_thumb').hide();
      $(select_variant).show();
    }
    
    //for color hide
    if($('ul.swatch li.color').length==1){
      $('ul.swatch li.color').hide();
      $('.header.color').hide();;
    }

    //Grayed out sold or not available options
    console.log(variant);
    var current_option = variant.option1;
    current_option = current_option.toLocaleLowerCase().replace(/ |\//g,'_');
    var find_second_group=all_color[current_option][0];
      $('.swatch-element[data-value='+find_second_group+']').parent().find('.swatch-element').removeClass('available').addClass('soldout').find(':radio').attr('disabled', 'disabled');
    $.each( all_color[current_option], function( key, value ) {
      console.log(current_option+"--"+value);
    $('.swatch-element[data-value='+value+']').removeClass('soldout').addClass('available').find(':radio').removeAttr('disabled');
    });
    //End-Grayed sold or not available options
    
    //If variant available
    if (variant && variant.available == true) {
      $('.product_form button[name="add"] span').html(theme.strings.addToCart);
      $('.product_form button[name="add"]').removeAttr('disabled');
      $('[data-product-price]').html(slate.Currency.formatMoney(variant.price, theme.moneyFormat));
    } else {
      //Not available
      $('.product_form button[name="add"] span').html(theme.strings.unavailable);
      $('.product_form button[name="add"]').attr('disabled', 'disabled');
    }

   };
</script>
{% if product.variants.size > 1 or product.options.size > 1 %}
<script type="text/javascript">
  
  //create array for available options
  {% for option in product.options_with_values %}
  {%assign color_json = option.values %}
  {%break%}
  {% endfor %}
    var all_color = [];
  {% for color in color_json %}
  
    all_color.{{color | handleize | replace: "-","_" }}  = [];
      {% for variant in product.variants %}
      {%if variant.option1 contains color %}
        {%if variant.available %}
        all_color.{{color | handleize | replace: "-","_" }}.push('{{variant.option2}}');
        {%endif%}
      {%endif%}
      {% endfor %}
  {% endfor %}
  console.log(all_color);
  //end-create array for available options
  
  // <![CDATA[
  $(function() {
    new Shopify.OptionSelectors("product-select-{{ product.id }}", { product: {{ product | json }}, onVariantSelected: selectCallback{% if product-form == 'product' %}, enableHistoryState: true{% endif %} });
  });
  // ]]>
</script>
{% endif %}
<style>
  .product_form .selector-wrapper {
    display: none;
  }
  
  
</style>

<style>
  a#BIS_trigger {
    display: none;
  }
</style>
{% for variant in product.variants %}
{% if variant.available == false %}
<style>
  a#BIS_trigger {
    display: block !important;
  }
</style>
{%break%}
{% endif %}
{% endfor %}
